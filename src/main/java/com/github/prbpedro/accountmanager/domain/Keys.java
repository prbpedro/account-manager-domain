/*
 * This file is generated by jOOQ.
 */
package com.github.prbpedro.accountmanager.domain;


import com.github.prbpedro.accountmanager.domain.tables.Account;
import com.github.prbpedro.accountmanager.domain.tables.AccountBalance;
import com.github.prbpedro.accountmanager.domain.tables.AccountTransaction;
import com.github.prbpedro.accountmanager.domain.tables.Bank;
import com.github.prbpedro.accountmanager.domain.tables.Currency;
import com.github.prbpedro.accountmanager.domain.tables.records.AccountBalanceRecord;
import com.github.prbpedro.accountmanager.domain.tables.records.AccountRecord;
import com.github.prbpedro.accountmanager.domain.tables.records.AccountTransactionRecord;
import com.github.prbpedro.accountmanager.domain.tables.records.BankRecord;
import com.github.prbpedro.accountmanager.domain.tables.records.CurrencyRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>AC_DATABASE</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AccountBalanceRecord, Long> IDENTITY_ACCOUNT_BALANCE = Identities0.IDENTITY_ACCOUNT_BALANCE;
    public static final Identity<AccountTransactionRecord, Long> IDENTITY_ACCOUNT_TRANSACTION = Identities0.IDENTITY_ACCOUNT_TRANSACTION;
    public static final Identity<BankRecord, Long> IDENTITY_BANK = Identities0.IDENTITY_BANK;
    public static final Identity<CurrencyRecord, Long> IDENTITY_CURRENCY = Identities0.IDENTITY_CURRENCY;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountRecord> CONSTRAINT_E = UniqueKeys0.CONSTRAINT_E;
    public static final UniqueKey<AccountBalanceRecord> CONSTRAINT_E1 = UniqueKeys0.CONSTRAINT_E1;
    public static final UniqueKey<AccountTransactionRecord> CONSTRAINT_2 = UniqueKeys0.CONSTRAINT_2;
    public static final UniqueKey<BankRecord> CONSTRAINT_1 = UniqueKeys0.CONSTRAINT_1;
    public static final UniqueKey<BankRecord> UNIQUE_CODE = UniqueKeys0.UNIQUE_CODE;
    public static final UniqueKey<CurrencyRecord> CONSTRAINT_5 = UniqueKeys0.CONSTRAINT_5;
    public static final UniqueKey<CurrencyRecord> UNIQUE_CODE_CURRENCY = UniqueKeys0.UNIQUE_CODE_CURRENCY;
    public static final UniqueKey<AccountBalanceRecord> UNIQUE_ACCOUNT_CURRENCY = UniqueKeys0.UNIQUE_ACCOUNT_CURRENCY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AccountRecord, BankRecord> FKAWL1LRPNGB7H5KTG79ODEIC5W = ForeignKeys0.FKAWL1LRPNGB7H5KTG79ODEIC5W;
    public static final ForeignKey<AccountBalanceRecord, AccountRecord> FKLIXFD5D2QJUX0B3PEYPCPEOL1 = ForeignKeys0.FKLIXFD5D2QJUX0B3PEYPCPEOL1;
    public static final ForeignKey<AccountBalanceRecord, CurrencyRecord> FKEA365BS21NVTP9ENUUYXIM4TI = ForeignKeys0.FKEA365BS21NVTP9ENUUYXIM4TI;
    public static final ForeignKey<AccountTransactionRecord, AccountRecord> FKTDC7RHIN60BXAHWAN5FNWCSA6 = ForeignKeys0.FKTDC7RHIN60BXAHWAN5FNWCSA6;
    public static final ForeignKey<AccountTransactionRecord, CurrencyRecord> FKCRTHG890SSJVT69F4IUENU92P = ForeignKeys0.FKCRTHG890SSJVT69F4IUENU92P;
    public static final ForeignKey<AccountTransactionRecord, AccountRecord> FKF9CEM1VWYK13W14X2WY2I7CK = ForeignKeys0.FKF9CEM1VWYK13W14X2WY2I7CK;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AccountBalanceRecord, Long> IDENTITY_ACCOUNT_BALANCE = Internal.createIdentity(AccountBalance.ACCOUNT_BALANCE, AccountBalance.ACCOUNT_BALANCE.ID);
        public static Identity<AccountTransactionRecord, Long> IDENTITY_ACCOUNT_TRANSACTION = Internal.createIdentity(AccountTransaction.ACCOUNT_TRANSACTION, AccountTransaction.ACCOUNT_TRANSACTION.ID);
        public static Identity<BankRecord, Long> IDENTITY_BANK = Internal.createIdentity(Bank.BANK, Bank.BANK.ID);
        public static Identity<CurrencyRecord, Long> IDENTITY_CURRENCY = Internal.createIdentity(Currency.CURRENCY, Currency.CURRENCY.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AccountRecord> CONSTRAINT_E = Internal.createUniqueKey(Account.ACCOUNT, "CONSTRAINT_E", Account.ACCOUNT.ID);
        public static final UniqueKey<AccountBalanceRecord> CONSTRAINT_E1 = Internal.createUniqueKey(AccountBalance.ACCOUNT_BALANCE, "CONSTRAINT_E1", AccountBalance.ACCOUNT_BALANCE.ID);
        public static final UniqueKey<AccountTransactionRecord> CONSTRAINT_2 = Internal.createUniqueKey(AccountTransaction.ACCOUNT_TRANSACTION, "CONSTRAINT_2", AccountTransaction.ACCOUNT_TRANSACTION.ID);
        public static final UniqueKey<BankRecord> CONSTRAINT_1 = Internal.createUniqueKey(Bank.BANK, "CONSTRAINT_1", Bank.BANK.ID);
        public static final UniqueKey<BankRecord> UNIQUE_CODE = Internal.createUniqueKey(Bank.BANK, "UNIQUE_CODE", Bank.BANK.CODE);
        public static final UniqueKey<CurrencyRecord> CONSTRAINT_5 = Internal.createUniqueKey(Currency.CURRENCY, "CONSTRAINT_5", Currency.CURRENCY.ID);
        public static final UniqueKey<CurrencyRecord> UNIQUE_CODE_CURRENCY = Internal.createUniqueKey(Currency.CURRENCY, "UNIQUE_CODE_CURRENCY", Currency.CURRENCY.CODE);
        public static final UniqueKey<AccountBalanceRecord> UNIQUE_ACCOUNT_CURRENCY = Internal.createUniqueKey(AccountBalance.ACCOUNT_BALANCE, "UNIQUE_ACCOUNT_CURRENCY", AccountBalance.ACCOUNT_BALANCE.CURRENCY_ID, AccountBalance.ACCOUNT_BALANCE.ACCOUNT_ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AccountRecord, BankRecord> FKAWL1LRPNGB7H5KTG79ODEIC5W = Internal.createForeignKey(com.github.prbpedro.accountmanager.domain.Keys.CONSTRAINT_1, Account.ACCOUNT, "FKAWL1LRPNGB7H5KTG79ODEIC5W", Account.ACCOUNT.BANK_ID);
        public static final ForeignKey<AccountBalanceRecord, AccountRecord> FKLIXFD5D2QJUX0B3PEYPCPEOL1 = Internal.createForeignKey(com.github.prbpedro.accountmanager.domain.Keys.CONSTRAINT_E, AccountBalance.ACCOUNT_BALANCE, "FKLIXFD5D2QJUX0B3PEYPCPEOL1", AccountBalance.ACCOUNT_BALANCE.ACCOUNT_ID);
        public static final ForeignKey<AccountBalanceRecord, CurrencyRecord> FKEA365BS21NVTP9ENUUYXIM4TI = Internal.createForeignKey(com.github.prbpedro.accountmanager.domain.Keys.CONSTRAINT_5, AccountBalance.ACCOUNT_BALANCE, "FKEA365BS21NVTP9ENUUYXIM4TI", AccountBalance.ACCOUNT_BALANCE.CURRENCY_ID);
        public static final ForeignKey<AccountTransactionRecord, AccountRecord> FKTDC7RHIN60BXAHWAN5FNWCSA6 = Internal.createForeignKey(com.github.prbpedro.accountmanager.domain.Keys.CONSTRAINT_E, AccountTransaction.ACCOUNT_TRANSACTION, "FKTDC7RHIN60BXAHWAN5FNWCSA6", AccountTransaction.ACCOUNT_TRANSACTION.BENEFICIARY_ID);
        public static final ForeignKey<AccountTransactionRecord, CurrencyRecord> FKCRTHG890SSJVT69F4IUENU92P = Internal.createForeignKey(com.github.prbpedro.accountmanager.domain.Keys.CONSTRAINT_5, AccountTransaction.ACCOUNT_TRANSACTION, "FKCRTHG890SSJVT69F4IUENU92P", AccountTransaction.ACCOUNT_TRANSACTION.CURRENCY_ID);
        public static final ForeignKey<AccountTransactionRecord, AccountRecord> FKF9CEM1VWYK13W14X2WY2I7CK = Internal.createForeignKey(com.github.prbpedro.accountmanager.domain.Keys.CONSTRAINT_E, AccountTransaction.ACCOUNT_TRANSACTION, "FKF9CEM1VWYK13W14X2WY2I7CK", AccountTransaction.ACCOUNT_TRANSACTION.SENDER_ID);
    }
}
