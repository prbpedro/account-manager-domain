/*
 * This file is generated by jOOQ.
 */
package com.github.prbpedro.accountmanager.domain;


import com.github.prbpedro.accountmanager.domain.tables.Account;
import com.github.prbpedro.accountmanager.domain.tables.AccountBalance;
import com.github.prbpedro.accountmanager.domain.tables.AccountTransaction;
import com.github.prbpedro.accountmanager.domain.tables.Bank;
import com.github.prbpedro.accountmanager.domain.tables.Currency;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AcDatabase extends SchemaImpl {

    private static final long serialVersionUID = 721753117;

    /**
     * The reference instance of <code>AC_DATABASE</code>
     */
    public static final AcDatabase AC_DATABASE = new AcDatabase();

    /**
     * The table <code>AC_DATABASE.ACCOUNT</code>.
     */
    public final Account ACCOUNT = com.github.prbpedro.accountmanager.domain.tables.Account.ACCOUNT;

    /**
     * The table <code>AC_DATABASE.ACCOUNT_BALANCE</code>.
     */
    public final AccountBalance ACCOUNT_BALANCE = com.github.prbpedro.accountmanager.domain.tables.AccountBalance.ACCOUNT_BALANCE;

    /**
     * The table <code>AC_DATABASE.ACCOUNT_TRANSACTION</code>.
     */
    public final AccountTransaction ACCOUNT_TRANSACTION = com.github.prbpedro.accountmanager.domain.tables.AccountTransaction.ACCOUNT_TRANSACTION;

    /**
     * The table <code>AC_DATABASE.BANK</code>.
     */
    public final Bank BANK = com.github.prbpedro.accountmanager.domain.tables.Bank.BANK;

    /**
     * The table <code>AC_DATABASE.CURRENCY</code>.
     */
    public final Currency CURRENCY = com.github.prbpedro.accountmanager.domain.tables.Currency.CURRENCY;

    /**
     * No further instances allowed
     */
    private AcDatabase() {
        super("AC_DATABASE", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Account.ACCOUNT,
            AccountBalance.ACCOUNT_BALANCE,
            AccountTransaction.ACCOUNT_TRANSACTION,
            Bank.BANK,
            Currency.CURRENCY);
    }
}
